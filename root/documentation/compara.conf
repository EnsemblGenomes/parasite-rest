<endpoints>
  <homology_symbol>
    description=Retrieves homology information (orthologs) by symbol
    endpoint=homology/symbol/:species/:symbol
    method=GET
    group=Comparative Genomics
    output=json
    output=xml
    output=orthoxml
    <params>
      <species>
        type=String
        description=Species name/alias
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <symbol>
        type=String
        description=Symbol or display name of a gene
        example=__VAR(gene_symbol)__
        required=1
      </symbol>
      <compara>
        type=String
        description=Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data
        default=__VAR(compara)__
        example=__VAR(compara)__
      </compara>
      <external_db>
        type=String
        description=Filter by external database
        example=__VAR(gene_symbol_db)__
      </external_db>
      <format>
        type=Enum(full,condensed)
        description=Layout of the response
        default=full
      </format>
      <type>
        type=Enum(orthologues, paralogues, projections, all)
        description=The type of homology to return from this call. Projections are orthology calls defined between alternative assemblies and the genes shared between them. Useful if you need only one type of homology back from the service
        default=all
      </type>
      <target_species>
        type=String
        description=Filter by species. Supports all species aliases
        example=__VAR(species)__
        example=__VAR(species_common)__
      </target_species>
      <target_taxon>
        type=Integer
        description=Filter by taxon
        example=__VAR(taxon)__
        example=__VAR(target_taxon)__
      </target_taxon>
      <aligned>
        type=Boolean
        description=Return the aligned string if true. Otherwise, return the original sequence (no insertions)
        default=1
      </aligned>
      <sequence>
        type=Enum(none, cdna, protein)
        description=The type of sequence to bring back. Setting it to none results in no sequence being returned
        default=protein
      </sequence>
    </params>
    <examples>
      <basic>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=application/json
      </basic>
      <orthoxml>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=text/x-orthoxml+xml
      </orthoxml>
      <format_xml>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=text/xml
        <params>
          type=orthologues
          format=condensed
        </params>
      </format_xml>
      <format_limits>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=application/json
        <params>
          type=orthologues
          format=condensed
          target_taxon=__VAR(target_taxon)__
          target_species=__VAR(target_species)__
        </params>
      </format_limits>
      <format_limits_cdna>
        path=/homology/symbol/
        capture=__VAR(species_common)__
        capture=__VAR(gene_symbol)__
        content=application/json
        <params>
          type=orthologues
          target_taxon=__VAR(target_taxon)__
          target_species=__VAR(target_species)__
          sequence=cdna
        </params>
      </format_limits_cdna>
    </examples>
  </homology_symbol>
  <homology_ensemblgene>
    description=Retrieves homology information (orthologs) by gene id
    endpoint=homology/id/:id
    method=GET
    group=Comparative Genomics
    output=json
    output=xml
    output=orthoxml
    <params>
      <species>
        type=String
        description=Species name/alias
        example=__VAR(species)__
        example=__VAR(species_common)__
      </species>
      <id>
        type=String
        description=A stable ID
        example=__VAR(gene_stable_id)__
        required=1
      </id>
      <compara>
        type=String
        description=Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data
        default=__VAR(compara)__
        example=__VAR(compara)__
      </compara>
      <format>
        type=Enum(full, condensed)
        description=Layout of the response
        default=full
      </format>
      <type>
        type=Enum(orthologues, paralogues, projections, all)
        description=The type of homology to return from this call. Projections are orthology calls defined between alternative assemblies and the genes shared between them. Useful if you need only one type of homology back from the service
        default=all
      </type>
      <target_species>
        type=String
        description=Filter by species. Supports all species aliases
        example=__VAR(species_common)__
        example=__VAR(target_species)__
      </target_species>
      <target_taxon>
        type=Integer
        description=Filter by taxon
        example=__VAR(taxon)__
        example=__VAR(target_taxon)__
      </target_taxon>
      <aligned>
        type=Boolean
        description=Return the aligned string if true. Otherwise, return the original sequence (no insertions)
        default=1
      </aligned>
      <sequence>
        type=Enum(none, cdna, protein)
        description=The type of sequence to bring back. Setting it to none results in no sequence being returned
        default=protein
      </sequence>
    </params>
    <examples>
      <basic>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=application/json
      </basic>
      <orthoxml>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=text/x-orthoxml+xml
      </orthoxml>
      <compara_xml>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        <params>
          compara=__VAR(compara)__
        </params>
        content=text/xml
      </compara_xml>
      <format_xml>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=text/xml
        <params>
          type=orthologues
          format=condensed
        </params>
      </format_xml>
      <orthoxml_limits>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=text/x-orthoxml+xml
        <params>
          type=orthologues
          target_taxon=__VAR(target_taxon)__
        </params>
      </orthoxml_limits>
      <format_limits_cdna>
        path=/homology/id/
        capture=__VAR(gene_stable_id)__
        content=application/json
        <params>
          type=orthologues
          target_taxon=__VAR(target_taxon)__
          target_species=__VAR(target_species)__
          sequence=cdna
        </params>
      </format_limits_cdna>
    </examples>
  </homology_ensemblgene>
  <genetree>
    description=Retrieves a gene tree dump for a gene tree stable identifier
    endpoint=genetree/id/:id
    method=GET
    group=Comparative Genomics
    output=phyloxml
    output=nh
    output=json
    <params>
      <id>
        type=String
        description=A genetree ID
        example=__VAR(genetree_stable_id)__
        required=1
      </id>
      <compara>
        type=String
        description=Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data
        default=__VAR(compara)__
        example=__VAR(compara)__
      </compara>
      <aligned>
        type=Boolean
        description=Return the aligned string if true. Otherwise, return the original sequence (no insertions)
        default=0
      </aligned>
      <sequence>
        type=Enum(none, cdna, protein)
        description=The type of sequence to bring back. Setting it to none results in no sequence being returned
        default=protein
      </sequence>
      <nh_format>
        type=Enum(full, display_label_composite, simple, species, species_short_name, ncbi_taxon, ncbi_name, njtree, phylip)
        description=The format of a NH (New Hampshire) request.
        default=simple
      </nh_format>
    </params>
    <examples>
      <phyloxml>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-phyloxml+xml
      </phyloxml>
      <phyloxml_cdna>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-phyloxml+xml
        <params>
          sequence=cdna
          aligned=1
        </params>
      </phyloxml_cdna>
      <phyloxml_none>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-phyloxml+xml
        <params>
          sequence=none
        </params>
      </phyloxml_none>
      <nh>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=text/x-nh
        <params>
          nh_format=simple
        </params>
      </nh>
      <json>
        path=/genetree/id/
        capture=__VAR(genetree_stable_id)__
        content=application/json
      </json>
    </examples>
  </genetree>
  <genetree_member_id>
    description=Retrieves a gene tree that contains the stable identifier
    endpoint=genetree/member/id/:id
    method=GET
    group=Comparative Genomics
    output=phyloxml
    output=nh
    output=json
    <params>
      <id>
        type=String
        description=A stable ID
        example=__VAR(gene_stable_id)__
        required=1
      </id>
      <species>
        type=String
        description=Species name/alias
        example=__VAR(species)__
        example=__VAR(species_common)__
      </species>
      <db_type>
        type=String
        description=Restrict the search to a database other than the default. Useful if you need to use a DB other than core
        example=core
      </db_type>
      <object_type>
        type=String
        description=Filter by feature type
        example=gene
        example=transcript
      </object_type>
      <compara>
        type=String
        description=Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data
        default=__VAR(compara)__
        example=__VAR(compara)__
      </compara>
      <aligned>
        type=Boolean
        description=Return the aligned string if true. Otherwise, return the original sequence (no insertions)
        default=0
      </aligned>
      <sequence>
        type=Enum(none, cdna, protein)
        description=The type of sequence to bring back. Setting it to none results in no sequence being returned
        default=protein
      </sequence>
      <nh_format>
        type=Enum(full, display_label_composite, simple, species, species_short_name, ncbi_taxon, ncbi_name, njtree, phylip)
        description=The format of a NH (New Hampshire) request.
        default=simple
      </nh_format>
    </params>
    <examples>
      <phyloxml>
        path=/genetree/member/id/
        capture=__VAR(gene_stable_id)__
        content=text/x-phyloxml+xml
      </phyloxml>
    </examples>
  </genetree_member_id>
  <genetree_member_symbol>
    description=Retrieves a gene tree containing the gene identified by a symbol
    endpoint=genetree/member/symbol/:species/:symbol
    method=GET
    group=Comparative Genomics
    output=phyloxml
    output=nh
    output=json
    <params>
      <symbol>
        type=String
        description=Symbol or display name of a gene
        example=__VAR(gene_symbol)__
        required=1
      </symbol>
      <species>
        type=String
        description=Species name/alias
        example=__VAR(species)__
        example=__VAR(species_common)__
        required=1
      </species>
      <db_type>
        type=String
        description=Restrict the search to a database other than the default. Useful if you need to use a DB other than core
        default=core
        example=core
        example=otherfeatures
      </db_type>
      <external_db>
        type=String
        description=Filter by external database
        example=__VAR(gene_symbol_db)__
      </external_db>
      <object_type>
        type=String
        description=Filter by feature type
        example=gene
        example=transcript
      </object_type>
      <compara>
        type=String
        description=Name of the compara database to use. Multiple comparas can exist on a server if you are accessing Ensembl Genomes data
        default=__VAR(compara)__
        example=__VAR(compara)__
      </compara>
      <aligned>
        type=Boolean
        description=Return the aligned string if true. Otherwise, return the original sequence (no insertions)
        default=0
      </aligned>
      <sequence>
        type=Enum(none, cdna, protein)
        description=The type of sequence to bring back. Setting it to none results in no sequence being returned
        default=protein
      </sequence>
      <nh_format>
        type=Enum(full, display_label_composite, simple, species, species_short_name, ncbi_taxon, ncbi_name, njtree, phylip)
        description=The format of a NH (New Hampshire) request.
        default=simple
      </nh_format>
    </params>
    <examples>
      <phyloxml>
        path=/genetree/member/symbol/
        capture=__VAR(species)__
        capture=__VAR(gene_symbol)__
        content=text/x-phyloxml+xml
      </phyloxml>
    </examples>
  </genetree_member_symbol>
</endpoints>
